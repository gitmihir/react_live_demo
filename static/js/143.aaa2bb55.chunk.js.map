{"version":3,"file":"static/js/143.aaa2bb55.chunk.js","mappings":"8KAeA,EAbkB,SAACA,GACjB,OACE,yBACGA,EAAMC,MAAMC,KAAI,SAACC,EAAOC,GACvB,OACE,0BACE,yBAAMD,EAAME,cADJD,EAId,KAGN,E,2BC6BA,EAtCuB,WACrB,IACME,GADSC,EAAAA,EAAAA,MACUC,OACnBC,EAAQ,qEAAiEH,EAAS,gBACxF,GAAkCI,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAC9B,GAA0BF,EAAAA,EAAAA,WAAS,GAAM,eAAlCG,EAAK,KAAEC,EAAQ,KACtB,GAAkCJ,EAAAA,EAAAA,WAAS,GAAK,eAAzCK,EAAS,KAAEC,EAAY,KAwB9B,OAtBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IACOT,GACJU,MAAK,YAAe,IAAZC,EAAI,EAAJA,KACPC,QAAQC,IAAIF,GACZ,IAAMG,EAAc,GACpB,IAAK,IAAMC,KAAOJ,EAAKK,QACrBF,EAAYG,KAAK,CACfC,UAAWP,EAAKK,QAAQD,GAAKG,UAC7BtB,WAAYe,EAAKK,QAAQD,GAAKnB,aAGlCO,EAAaW,GACbT,GAAS,GACTE,GAAa,EACf,IACCY,OAAM,SAACC,GACuB,IAAzBA,EAAMC,QAAQC,QAChBjB,GAAS,EAEb,GACJ,GAAG,CAACL,KAEF,UAAC,EAAAuB,SAAQ,WACNnB,GAAS,6CACRA,IAAS,SAAC,EAAS,CAACZ,MAAOU,IAC5BI,IAAa,SAACkB,EAAA,EAAM,MAG3B,C","sources":["components/Model/ModelList.js","pages/VehiclesDetail.js"],"sourcesContent":["import React from \"react\";\n\nconst ModelList = (props) => {\n  return (\n    <div>\n      {props.items.map((model, i) => {\n        return (\n          <div key={i}>\n            <div>{model.Model_Name}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default ModelList;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport ModelList from \"../components/Model/ModelList\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Loader from \"../UI/Loader\";\nconst VehiclesDetail = () => {\n  const params = useParams();\n  const getmakeid = params.makeid;\n  const modelurl = `https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeId/${getmakeid}?format=json`;\n  const [Modellist, SetModellist] = useState([]);\n  const [Error, SetError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(modelurl)\n      .then(({ data }) => {\n        console.log(data);\n        const lodedmodels = [];\n        for (const key in data.Results) {\n          lodedmodels.push({\n            Make_Name: data.Results[key].Make_Name,\n            Model_Name: data.Results[key].Model_Name,\n          });\n        }\n        SetModellist(lodedmodels);\n        SetError(false);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        if (error.message.length !== 0) {\n          SetError(true);\n        }\n      });\n  }, [modelurl]);\n  return (\n    <Fragment>\n      {Error && \"Something is Wrong Please try again later\"}\n      {!Error && <ModelList items={Modellist} />}\n      {isLoading && <Loader />}\n    </Fragment>\n  );\n};\nexport default VehiclesDetail;\n"],"names":["props","items","map","model","i","Model_Name","getmakeid","useParams","makeid","modelurl","useState","Modellist","SetModellist","Error","SetError","isLoading","setIsLoading","useEffect","axios","then","data","console","log","lodedmodels","key","Results","push","Make_Name","catch","error","message","length","Fragment","Loader"],"sourceRoot":""}